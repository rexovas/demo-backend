version: 0.2

phases:
  install:
    # runtime-versions:
      # python: latest
    commands:
      # - pip install --upgrade pip
      # - pip install -r requirements.txt
      # - apt-get update && apt-get install jq
      - apt-get update && apt-get upgrade -y
      - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x ./kubectl && mv ./kubectl /usr/bin/kubectl
      - curl -Lo kops https://github.com/kubernetes/kops/releases/download/1.11.1/kops-linux-amd64 && chmod +x kops && mv kops /usr/bin/kops
      - curl -LO https://git.io/get_helm.sh && chmod 700 ./get_helm.sh && ./get_helm.sh --version v3.2.0 && rm get_helm.sh
  build:
    commands:
      # - export VERSION=$(node -e "console.log(require('./package.json').version)")
      # - if [ -z "$VERSION" ]; then echo "VERSION variable is missing"; exit 1; fi
      - export TAG="$STAGE-1.0.0"
      - docker build . -t 900031763146.dkr.ecr.us-east-1.amazonaws.com/demo-backend:$TAG

      - $(aws ecr get-login --no-include-email)
      - docker push 900031763146.dkr.ecr.us-east-1.amazonaws.com/demo-backend:$TAG
      - kops export kubecfg ue1-k8s.rex.vision --state s3://rexvision-k8s-state-store

      # - aws cloudformation deploy --template-file ./cloudformation/cft.service.yml --stack-name eternal-service-$STAGE --parameter-overrides "Stage=$STAGE" --capabilities CAPABILITY_NAMED_IAM --no-fail-on-empty-changeset
      # - helm upgrade --install demo-backend-$STAGE --namespace demo-backend-$STAGE -f ./templates/helm/demo-backend/values-$STAGE.yaml ./helm/eternal-service --set image.tag=$TAG
